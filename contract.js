"use strict";var guessTheNumber = function() {	    LocalContractStorage.defineMapProperty(this, "bank", {        stringify: function (obj) {            return obj.toString();        },        parse: function (str) {            return new BigNumber(str);        }    });};guessTheNumber.prototype = {    init: function(val) {    	var a  = new BigNumber(0);    	this.bank.set("sum",a);    },    updateBank: function() {    	var a = this.bank.get("sum");    	this.bank.set("sum",a.plus(Blockchain.transaction.value));    	return this.bank.get("sum");    },    getBank: function() {        return this.bank.get("sum");    },    checkRandom: function(userNumber) {    	var min = 0; var max = 99;    	var rand = Math.floor(Math.random() * (max - min)) + min;    	if(Blockchain.transaction.value.lt(10000000000))    		return -1;    	var a = this.bank.get("sum");    	this.bank.set("sum",a.plus(Blockchain.transaction.value));    	a = this.bank.get("bank");    	if(userNumber === rand)    	{    		var value = a.dividedBy(100);    		this.bank.set("bank",a.minus(value));    		Blockchain.transfer(Blockchain.transaction.from, value);    	}        return String(rand)+':'+String(this.bank.get("sum"));    },    mat: function(){    	return Blockchain.transaction.from;    }};module.exports = guessTheNumber;